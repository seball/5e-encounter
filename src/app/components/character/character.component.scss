// Variables
$character: (
  card: (
    height: 140px,
    padding: 10px,
    margin: 1rem,
  ),
  name: (
    font-size: 1rem,
    max-width: 20vw,
  ),
  border: (
    width: 2px,
    animation-duration: 2s,
  ),
  avatar: (
    width: 120px,
    height: 100%,
  ),
);

@keyframes fade-out {
  0% {
    opacity: 1;
  }
  50% {
    opacity: 0.5;
  }
  100% {
    opacity: 0;
  }
}

@keyframes translate-x-right {
  to {
    transform: translateX(100%);
  }
}

@keyframes translate-x-left {
  to {
    transform: translateX(-100%);
  }
}

@keyframes translate-y-up {
  to {
    transform: translateY(-100%);
  }
}

@keyframes translate-y-down {
  to {
    transform: translateY(100%);
  }
}

@mixin border-line($is-vertical: false) {
  content: '';
  position: absolute;
  background-color: var(--color-spec1);

  @if $is-vertical {
    width: map-get($character, border, width);
    height: calc(100% + 24px);
  } @else {
    width: 100%;
    height: map-get($character, border, width);
  }
}

app-character {
  .character-card {
    position: relative;
    height: map-get($character, card, height);
    background: var(--color-footer);
    border: 1px solid var(--color-text);
    padding: map-get($character, card, padding);
    margin-top: map-get($character, card, margin);
    overflow: hidden;

    &.previous {
      animation: fade-out 1s ease-out;
    }

    &.exhausted {
      border-color: grey;
      opacity: 0.7;
    }

    &.preview {
      border: 1px solid var(--color-spec2);
    }

    &.active {
      border: none;

      .content::before,
      .content::after {
        @include border-line(true);
        top: -12px;
      }

      .content::before {
        left: 0;
        transform: translateY(100%);
        animation: translate-y-up
          map-get($character, border, animation-duration) infinite linear;
        animation-delay: -1s;
      }

      .content::after {
        right: 0;
        transform: translateY(-100%);
        animation: translate-y-down
          map-get($character, border, animation-duration) infinite linear;
        animation-delay: -1s;
      }

      &::before,
      &::after {
        @include border-line;
      }

      &::before {
        top: 0;
        transform: translateX(-100%);
        animation: translate-x-right
          map-get($character, border, animation-duration) infinite linear;
      }

      &::after {
        bottom: 0;
        transform: translateX(100%);
        animation: translate-x-left
          map-get($character, border, animation-duration) infinite linear;
      }
    }
  }

  .avatar {
    float: right;
    width: map-get($character, avatar, width);
    height: map-get($character, avatar, height);
  }

  .name-section {
    text-align: start;
    font-size: map-get($character, name, font-size);

    input {
      text-align: start;
      max-width: map-get($character, name, max-width);
    }
  }

  .damage-section {
    margin-top: map-get($character, card, margin);
  }

  .edit-mode {
    .edit {
      display: none;
    }
    .save {
      display: initial;
    }
  }

  .view-mode {
    .edit {
      display: initial;
    }
    .save {
      display: none;
    }
  }
}
